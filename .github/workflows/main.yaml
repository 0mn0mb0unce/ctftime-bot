name: "build app and container image"

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install musl
        uses: daaku/gh-action-apt-install@v4
        with:
          packages: musl musl-dev musl-tools
      - name: install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: x86_64-unknown-linux-musl
      - name: build app
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=x86_64-unknown-linux-musl
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: onb-ctftime-bot
          path: target/x86_64-unknown-linux-musl/release/onb-ctftime-bot
  build-image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: donwload binary
        uses: actions/download-artifact@v4
        with:
          name: onb-ctftime-bot
      - name: login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: build & push image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
